{"ast":null,"code":"import createStore from \"unistore\";\nimport axios from \"axios\";\nconst initialState = {\n  listNews: [],\n  isloading: true,\n  first_name: \"\",\n  last_name: \"\",\n  full_name: \"\",\n  email: \"\",\n  namaPengguna: \"\",\n  kataKunci: \"\",\n  is_login: false\n};\nconst apiKey = \"02d1c2c457c14f739ed709c4bca05f3c\";\nconst baseUrl = \"https://newsapi.org/v2/\";\nconst urlHeadline = baseUrl + \"top-headlines?country=id&apikey=\" + apiKey;\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  RequestDataNews: async state => {\n    await axios.get(urlHeadline).then(function (response) {\n      store.setState({\n        listNews: response.data.articles,\n        isloading: false\n      });\n    }).catch(function (error) {\n      store.setState({\n        isloading: false\n      });\n    });\n  },\n  handleInputChangeSearch: async (state, event) => {\n    let value = event.target.value;\n    await store.setState({\n      search: value\n    });\n  },\n  searchNews: async (state, keyword) => {\n    if (keyword.length > 2) {\n      try {\n        const response = await axios.get(baseUrl + \"everything?q=\" + keyword + \"&apiKey=\" + apiKey);\n        store.setState({\n          listNews: response.data.articles\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  requestNews: async (state, paramCategory) => {\n    console.warn(paramCategory);\n    await axios.get(urlHeadline + \"&category=\" + paramCategory).then(function (response) {\n      store.setState({\n        listNews: response.data.articles,\n        isLoading: false\n      }); // handle success\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta10/fuk/github/hedy capel/challenge_reacttttt/src/store.js"],"names":["createStore","axios","initialState","listNews","isloading","first_name","last_name","full_name","email","namaPengguna","kataKunci","is_login","apiKey","baseUrl","urlHeadline","store","actions","RequestDataNews","state","get","then","response","setState","data","articles","catch","error","handleInputChangeSearch","event","value","target","search","searchNews","keyword","length","console","requestNews","paramCategory","warn","isLoading","log"],"mappings":"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","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\nconst initialState = {\n    listNews : [],\n    isloading : true,\n    first_name : \"\",\n    last_name : \"\",\n    full_name : \"\",\n    email : \"\",\n    namaPengguna : \"\",\n    kataKunci: \"\",\n    is_login : false\n};\n\nconst apiKey = \"02d1c2c457c14f739ed709c4bca05f3c\"\nconst baseUrl = \"https://newsapi.org/v2/\"\nconst urlHeadline = baseUrl+\"top-headlines?country=id&apikey=\"+apiKey;\n\nexport const store = createStore(initialState);\nexport const actions = store => ({\n    RequestDataNews : async (state) => {\n        await axios\n            .get(urlHeadline)\n            .then(function(response){\n                store.setState({ listNews: response.data.articles, isloading: false});\n            })\n            .catch(function(error){\n                store.setState({ isloading:false})\n            })\n    },\n    handleInputChangeSearch : async(state,event)  => {\n        let value = event.target.value;\n        await store.setState({ search: value });\n      },\n\n    searchNews : async(state, keyword)  => {\n        if (keyword.length > 2) {\n          try {\n            const response = await axios.get(\n              baseUrl + \"everything?q=\" + keyword + \"&apiKey=\" + apiKey\n            );\n            store.setState({ listNews: response.data.articles });\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      },\n\n      requestNews : async (state,paramCategory) => {\n        \n        console.warn(paramCategory)\n        await axios\n        .get(urlHeadline + \"&category=\" + paramCategory)\n        .then(function (response) {\n            store.setState({ listNews: response.data.articles, isLoading: false });\n            // handle success\n        })\n        .catch(function (error) {\n            store.setState({ isLoading: false });\n            // handle error\n            console.log(error);\n        });\n    }\n  });"]},"metadata":{},"sourceType":"module"}